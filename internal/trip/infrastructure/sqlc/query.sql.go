// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package sqlc

import (
	"context"
)

const findPopularTravelCountries = `-- name: FindPopularTravelCountries :many
SELECT
    destination_country_code,
    destination_i18n_key,
    destination_currency,
    destination_currency_symbol,
    destination_emoji
FROM popular_travel_countries
WHERE 
    (traveler_country_code = ?1)
    OR (?1 IS NULL AND traveler_country_code IS NULL)
ORDER BY rank ASC
`

type FindPopularTravelCountriesRow struct {
	DestinationCountryCode    string
	DestinationI18nKey        string
	DestinationCurrency       string
	DestinationCurrencySymbol string
	DestinationEmoji          *string
}

func (q *Queries) FindPopularTravelCountries(ctx context.Context, travelerCountryCode *string) ([]FindPopularTravelCountriesRow, error) {
	rows, err := q.db.QueryContext(ctx, findPopularTravelCountries, travelerCountryCode)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []FindPopularTravelCountriesRow
	for rows.Next() {
		var i FindPopularTravelCountriesRow
		if err := rows.Scan(
			&i.DestinationCountryCode,
			&i.DestinationI18nKey,
			&i.DestinationCurrency,
			&i.DestinationCurrencySymbol,
			&i.DestinationEmoji,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
