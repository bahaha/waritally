package trips

import (
	"waritally/internal/server/i18n"
	"waritally/internal/server/views/layout"
	"waritally/internal/server/views/trips/props"
	"waritally/pkg/components/ui/form"
	"waritally/pkg/components/ui/input"
	"waritally/pkg/components/ui/label"
)

templ NewTrip(props *props.NewTripProps) {
	{{ NameContext := &form.FormItemContext{ID: "ABC"} }}
	{{ CountryContext := &form.FormItemContext{ID: "DEF"} }}
	{{ LocationContext := &form.FormItemContext{ID: "GHI"} }}
	@layout.BaseLayout(i18n.GetTranslation(ctx.Value("lang").(string), "trip.create.title", nil)) {
		<h1 class="text-3xl font-bold text-primary mb-6">{ i18n.GetTranslation(ctx.Value("lang").(string), "trip.create.title", nil) }</h1>
		<form class="space-y-3">
			@form.FormItem(
				form.New().WithFormItem(NameContext),
			) {
				<label
					{ label.New(label.LabelProps().
                WithinContext(ctx, NameContext.ID).
                WithClass("text-2xl").
                WithRequired(true))... }
				>
					{ i18n.GetTranslation(ctx.Value("lang").(string), "trip.form.name", nil) }
				</label>
				<input
					placeholder={ i18n.GetTranslation(ctx.Value("lang").(string), "trip.form.name.placeholder", nil) }
					required
					autofocus
					{ input.New(input.InputProps().WithinContext(ctx, NameContext.ID)) ... }
				/>
			}
			@form.FormItem(
				form.New().WithFormItem(CountryContext),
			) {
				<label
					{ label.New(label.LabelProps().
                WithinContext(ctx, CountryContext.ID).
                WithClass("text-2xl").
                WithRequired(true))... }
				>
					{ i18n.GetTranslation(ctx.Value("lang").(string), "trip.form.country", nil) }
				</label>
				<select
					name="country"
					required
					hx-trigger="change"
					hx-get="/api/locations"
					hx-target="#location-tags"
				>
					<option value="">{ i18n.GetTranslation(ctx.Value("lang").(string), "trip.form.country.select", nil) }</option>
					for _, country := range props.Countries {
						<option value={ country.Code }>{ country.Name }</option>
					}
				</select>
			}
			@form.FormItem(
				form.New().WithFormItem(LocationContext),
			) {
				<label { label.New(label.LabelProps().WithinContext(ctx, CountryContext.ID))... }>
					{ i18n.GetTranslation(ctx.Value("lang").(string), "trip.form.locations", nil) }
				</label>
				<div id="location-tags" class="flex flex-wrap gap-2"></div>
			}
		</form>
	}
}
