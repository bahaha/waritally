// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package sqlc

import (
	"context"
)

type Querier interface {
	// Creates a new user with explicit ULID and returns the full record
	//
	//  INSERT INTO users (
	//      public_id,
	//      name,
	//      device_id,
	//      preferred_currency
	//  ) VALUES (
	//      ?1,
	//      ?2,
	//      ?3,
	//      ?4
	//  ) RETURNING id, public_id, name, device_id, preferred_currency, created_at
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	// Deletes a user by public ID
	//
	//  DELETE FROM users
	//  WHERE public_id = ?1
	DeleteUser(ctx context.Context, publicID string) error
	// Finds a user by their device ID with explicit LIMIT 1
	//
	//  SELECT id, public_id, name, device_id, preferred_currency, created_at
	//  FROM users
	//  WHERE device_id = ?1 LIMIT 1
	GetUserByDeviceID(ctx context.Context, deviceID string) (User, error)
	// Finds a user by their public ULID with explicit LIMIT 1
	//
	//  SELECT id, public_id, name, device_id, preferred_currency, created_at
	//  FROM users
	//  WHERE public_id = ?1 LIMIT 1
	GetUserByPublicID(ctx context.Context, publicID string) (User, error)
	// Lists all users with explicit column selection
	//
	//  SELECT id, public_id, name, device_id, preferred_currency, created_at
	//  FROM users
	//  ORDER BY created_at DESC
	//  LIMIT ?2 OFFSET ?1
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	// Updates a user's preferred currency using named parameters
	//
	//  UPDATE users
	//  SET preferred_currency = ?1
	//  WHERE public_id = ?2
	//  RETURNING id, public_id, name, device_id, preferred_currency, created_at
	UpdateUserCurrency(ctx context.Context, arg UpdateUserCurrencyParams) (User, error)
	// Updates a user's name using named parameters
	//
	//  UPDATE users
	//  SET name = ?1
	//  WHERE public_id = ?2
	//  RETURNING id, public_id, name, device_id, preferred_currency, created_at
	UpdateUserName(ctx context.Context, arg UpdateUserNameParams) (User, error)
}

var _ Querier = (*Queries)(nil)
